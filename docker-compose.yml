version: '3'
services:
  peera-db:
    image: ekayim/dejima-nonvpg
    container_name: PeerA-db
    ports:
        - 54321:5432
    volumes:
        - ./db/postgresql.conf:/etc/postgresql.conf
        - ./db/initialize.sh:/docker-entrypoint-initdb.d/initialize.sh
        - ./db/setup_files:/etc/setup_files
    environment:
        - PEER_NAME=PeerA 
        - DEJIMA_EXECUTION_ENDPOINT=PeerA-proxy:8000/execute
        - DEJIMA_TERMINATION_ENDPOINT=PeerA-proxy:8000/terminate
    networks:
        dejima_net:
            ipv4_address: 172.30.0.3

  peera-proxy:
    image: ekayim/dejima-proxy:latest
    container_name: PeerA-proxy
    command: gunicorn -b 0.0.0.0:8000 --threads 3 server:app
    # command: python handmade_server.py
    volumes:
        - ./proxy:/code
    ports:
        - 8001:8000
    depends_on:
        - peera-db
    environment: 
        - PEER_NAME=PeerA 
    networks:
        dejima_net:
            ipv4_address: 172.30.0.4

  peerb-db:
    image: ekayim/dejima-nonvpg
    container_name: PeerB-db
    ports:
        - 54322:5432
    volumes:
        - ./db/postgresql.conf:/etc/postgresql.conf
        - ./db/initialize.sh:/docker-entrypoint-initdb.d/initialize.sh
        - ./db/setup_files:/etc/setup_files
    environment:
        - PEER_NAME=PeerB 
        - DEJIMA_EXECUTION_ENDPOINT=PeerB-proxy:8000/execute
        - DEJIMA_TERMINATION_ENDPOINT=PeerB-proxy:8000/terminate
    networks:
        dejima_net:
            ipv4_address: 172.30.0.6

  peerb-proxy:
    image: ekayim/dejima-proxy:latest
    container_name: PeerB-proxy
    command: gunicorn -b 0.0.0.0:8000 --threads 3 server:app
    # command: python handmade_server.py
    volumes:
        - ./proxy:/code
    ports:
        - 8002:8000
    depends_on:
        - peerb-db
    environment: 
        - PEER_NAME=PeerB 
    networks:
        dejima_net:
            ipv4_address: 172.30.0.7

  peerc-db:
    image: ekayim/dejima-nonvpg
    container_name: PeerC-db
    ports:
        - 54323:5432
    volumes:
        - ./db/postgresql.conf:/etc/postgresql.conf
        - ./db/initialize.sh:/docker-entrypoint-initdb.d/initialize.sh
        - ./db/setup_files:/etc/setup_files
    environment:
        - PEER_NAME=PeerC 
        - DEJIMA_EXECUTION_ENDPOINT=PeerC-proxy:8000/execute
        - DEJIMA_TERMINATION_ENDPOINT=PeerC-proxy:8000/terminate
    networks:
        dejima_net:
            ipv4_address: 172.30.0.9

  peerc-proxy:
    image: ekayim/dejima-proxy:latest
    container_name: PeerC-proxy
    command: gunicorn -b 0.0.0.0:8000 --threads 3 server:app
    # command: python handmade_server.py
    volumes:
        - ./proxy:/code
    ports:
        - 8003:8000
    depends_on:
        - peerc-db
    environment: 
        - PEER_NAME=PeerC 
    networks:
        dejima_net:
            ipv4_address: 172.30.0.10

  mediator-db:
    image: ekayim/dejima-nonvpg
    container_name: Mediator-db
    ports:
        - 54324:5432
    volumes:
        - ./db/postgresql.conf:/etc/postgresql.conf
        - ./db/initialize.sh:/docker-entrypoint-initdb.d/initialize.sh
        - ./db/setup_files:/etc/setup_files
    environment:
        - PEER_NAME=Mediator 
        - DEJIMA_EXECUTION_ENDPOINT=Mediator-proxy:8000/execute
        - DEJIMA_TERMINATION_ENDPOINT=Mediator-proxy:8000/terminate
    networks:
        dejima_net:
            ipv4_address: 172.30.0.12

  mediator-proxy:
    image: ekayim/dejima-proxy:latest
    container_name: Mediator-proxy
    command: gunicorn -b 0.0.0.0:8000 --threads 3 server:app
    # command: python handmade_server.py
    volumes:
        - ./proxy:/code
    ports:
        - 8004:8000
    depends_on:
        - mediator-db
    environment: 
        - PEER_NAME=Mediator 
    networks:
        dejima_net:
            ipv4_address: 172.30.0.13
networks:
  dejima_net:
    driver: bridge
    ipam:
     driver: default
     config:
       - subnet: 172.30.0.0/24
